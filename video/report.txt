1. Описание выбранной библиотеки и модели
Для задачи обнаружения объектов на видео использована модель YOLOv8 — одна из самых актуальных версий модели для обнаружения объектов в реальном времени. YOLOv8 — это глубокая нейронная сеть, разработанная для быстрых и точных предсказаний в задачах компьютерного зрения. В отличие от предыдущих версий (YOLOv3 и YOLOv4), YOLOv8 обеспечивает более высокую точность и скорость работы.

Преимущества YOLOv8:

Высокая скорость обработки: YOLOv8 способен эффективно обрабатывать кадры в реальном времени.
Высокая точность: Модель хорошо справляется с разнообразными объектами и фонами.
Гибкость: YOLOv8 поддерживает различные варианты (Tiny, Small, Medium, Large), что позволяет выбирать оптимальный баланс между точностью и производительностью в зависимости от ресурсов.
Простота интеграции: YOLOv8 можно легко интегрировать с другими библиотеками и фреймворками, такими как OpenCV для работы с видео.
2. Принцип работы модели и причина выбора
YOLO (You Only Look Once) — это модель, использующая архитектуру, которая предсказывает классы объектов и их координаты в одно единственное вычисление. Это делает её намного быстрее других методов обнаружения объектов, таких как R-CNN, где для каждой области интереса требуется дополнительная обработка.

Мы выбрали YOLOv8 для задачи видеонаблюдения, так как эта модель сочетает в себе высокую точность и скорость, что является важным для работы с видео. Она идеально подходит для обработки видеопотока в реальном времени и может обрабатывать несколько объектов на кадре одновременно.

3. Структура датасета
Для тестирования модели использовалось видео с трафиком

4. Метрики оценки качества модели
Для оценки качества работы модели YOLOv8 используется несколько метрик:

mAP (mean Average Precision): Средняя точность модели по всем классам объектов.
FPS (Frames Per Second): Количество кадров в секунду, которое модель может обрабатывать при работе с видео. Это важно для реального времени.
IoU (Intersection over Union): Метрика для оценки того, насколько точно модель предсказала расположение объекта на изображении.
5. Особенности реализации алгоритма
Процесс реализации обнаружения объектов с использованием YOLOv8 и OpenCV включает несколько этапов:

Загрузка модели YOLOv8: Мы использовали предварительно обученную модель YOLOv8 с использованием библиотеки ultralytics. Это позволяет ускорить внедрение решения без необходимости тренировать модель с нуля.
Обработка видеопотока: С помощью OpenCV мы захватывали кадры из видеофайла и передавали их в модель для обработки.
Обнаружение объектов: Модель детектирует объекты на каждом кадре видео. Для каждого обнаруженного объекта определяются его координаты и класс.
Отображение результатов: После обработки каждого кадра рамки вокруг объектов отрисовываются на видео, и результат отображается на экране в реальном времени.
6. Эффективность алгоритма
Алгоритм YOLOv8 продемонстрировал отличные результаты при обнаружении объектов в видеофайле:

Модель эффективно распознавала объекты, включая автомобили, людей и транспортные средства, с высокой точностью.
Время обработки каждого кадра составляет порядка 57.1 мс, что позволяет работать с видео в реальном времени (до 18 кадров в секунду).
Алгоритм справляется с многоклассовым обнаружением объектов, обеспечивая надежные результаты в условиях сложных сцен.
Заключение
Решение на базе YOLOv8 и OpenCV продемонстрировало отличную производительность для задачи обнаружения объектов на видео. Модель обеспечивает высокую точность и скорость, что делает её идеальной для применения в системах видеонаблюдения и автоматического анализа видеопотока в реальном времени.

